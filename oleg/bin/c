#!/run/current-system/profile/bin/sh
# -*- scheme -*-
exec ${GUILE:-$(which guile)} $GUILE_FLAGS --no-auto-compile -e '(@@ (c) main)' -s "$0" "$@"
!#

;;;; c --- Wrapper for a Tmuxifier program.
;;;; Copyright Â© 2019 Oleg Pyhalov <pyhalov@majordomo.ru>
;;;; Released under the GNU GPLv3 or any later version.

(define-module (c)
  #:use-module (srfi srfi-37))

;;; Commentary:
;;;
;;; DESCRIPTION
;;;
;;; Code:

(define %options
  (let ((display-and-exit-proc (lambda (msg)
                                 (lambda (opt name arg loads)
                                   (display msg) (quit)))))
    (list (option '(#\v "version") #f #f
                  (display-and-exit-proc "guile-c version 0.0.1\n"))
          (option '(#\h "help") #f #f
                  (display-and-exit-proc
                   "Usage: c HOST\n")))))

(define %default-options
  '())

(define (main args)
  (define opts
    (args-fold (cdr (program-arguments))
               %options
               (lambda (opt name arg loads)
                 (error "Unrecognized option `~A'" name))
               (lambda (op loads)
                 (cons op loads))
               %default-options))
  (let ((host (car opts)))
    (unless (getenv "TMUX")
      (display "Should run inside of TMUX session.  Hint: Run `tmux'.\n")
      (exit 1))
    (setenv "TMUXIFIER_USER" "root")
    (setenv "TMUXIFIER_HOST" host)
    (system* "tmuxifier" "w" "ssh-sudo")))

;;; c ends here
