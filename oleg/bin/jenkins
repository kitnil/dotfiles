#!/run/current-system/profile/bin/sh
# -*- scheme -*-
exec ${GUILE:-$(which guile)} $GUILE_FLAGS -e '(@@ (jenkins) main)' -s "$0" "$@"
!#

;;;; jenkins --- Guile client for Jenkins
;;;; Copyright Â© 2019 Oleg Pykhalov <go.wigust@gmail.com>
;;;; Released under the GNU GPLv3 or any later version.

(define-module (jenkins)
  #:use-module (rnrs bytevectors)
  #:use-module (srfi srfi-1)
  #:use-module (srfi srfi-11)
  #:use-module (srfi srfi-37)
  #:use-module (web client))

;;; Commentary:
;;;
;;; This script calls Jenkins API to build a job.
;;;
;;; Code:

(define %options
  (let ((display-and-exit-proc (lambda (msg)
                                 (lambda (opt name arg loads)
                                   (display msg) (quit)))))
    (list (option '(#\b "branch") #f #t
                  (lambda (opt name arg loads)
                    (alist-cons 'branch arg loads)))
          (option '(#\j "job") #f #t
                  (lambda (opt name arg loads)
                    (alist-cons 'job arg loads)))
          (option '(#\U "url") #f #t
                  (lambda (opt name arg loads)
                    (alist-cons 'url arg loads)))
          (option '(#\u "user") #f #t
                  (lambda (opt name arg loads)
                    (alist-cons 'user arg loads)))
          (option '(#\t "token") #f #t
                  (lambda (opt name arg loads)
                    (alist-cons 'token arg loads)))
          (option '(#\v "version") #f #f
                  (display-and-exit-proc "jenkins version 0.0.1\n"))
          (option '(#\h "help") #f #f
                  (display-and-exit-proc
                   "Usage: jenkins ...")))))

(define %default-options
  '())

(define (main args)
  (define opts
    (args-fold (cdr (program-arguments))
               %options
               (lambda (opt name arg loads)
                 (error "Unrecognized option `~A'" name))
               (lambda (op loads)
                 (cons op loads))
               %default-options))
  (let ((branch (assoc-ref opts 'branch))
        (job    (assoc-ref opts 'job))
        (url    (assoc-ref opts 'url))
        (user   (assoc-ref opts 'user))
        (token  (assoc-ref opts 'token)))

    (define request
      (string-append url "/job/" job "/job/" branch "/build"))

    (display request)
    (newline)

    (system* "curl" "-X" "POST" request)))

;;; jenkins ends here
